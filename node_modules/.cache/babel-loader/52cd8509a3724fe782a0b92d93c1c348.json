{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nthab\\\\Desktop\\\\Coding Dojo\\\\MERN\\\\critterpedia\\\\src\\\\components\\\\Bugs.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Bugs = props => {\n  _s();\n\n  const [bugs, setBugs] = useState([]);\n  const [available, setAvailable] = useState([]);\n  const {\n    month\n  } = props;\n  const {\n    hour\n  } = props;\n  useEffect(() => {\n    axios.get(`https://acnhapi.com/v1a/bugs/`).then(response => {\n      // console.log(response.data);\n      // console.log(\"this is the month array\" + response.data[0].availability[\"month-array-northern\"])\n      // console.log(\"this is the time array\" + response.data[0].availability[\"time-array\"])\n      setBugs(response.data);\n      const result = bugs.filter(bug => bug.availability[\"month-array-northern\"].includes(month) && bug.availability[\"time-array\"].includes(hour));\n      console.log(result);\n      setAvailable(result);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  console.log(\"this is the month\" + month); // console.log(\"this is the hour\" + hour )\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bugs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), bugs ? available ? available.map((bug, idx) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"75px\"\n          },\n          src: `https://acnhapi.com/v1/images/bugs/${bug.id}`\n        }, bug.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Bugs, \"Q8bQidazq/m/G+N4oqhlSZw2f9M=\");\n\n_c = Bugs;\nexport default Bugs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bugs\");","map":{"version":3,"sources":["C:/Users/nthab/Desktop/Coding Dojo/MERN/critterpedia/src/components/Bugs.jsx"],"names":["React","axios","useState","useEffect","Bugs","props","bugs","setBugs","available","setAvailable","month","hour","get","then","response","data","result","filter","bug","availability","includes","console","log","catch","error","map","idx","width","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEJ,QAAM;AAACQ,IAAAA;AAAD,MAAUL,KAAhB;AACA,QAAM;AAACM,IAAAA;AAAD,MAASN,KAAf;AAEIF,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACW,GAAN,CAAW,+BAAX,EACKC,IADL,CACUC,QAAQ,IAAI;AACd;AACA;AACA;AACAP,MAAAA,OAAO,CAACO,QAAQ,CAACC,IAAV,CAAP;AACA,YAAMC,MAAM,GAAGV,IAAI,CAACW,MAAL,CAAYC,GAAG,IAAIA,GAAG,CAACC,YAAJ,CAAiB,sBAAjB,EAAyCC,QAAzC,CAAkDV,KAAlD,KAA4DQ,GAAG,CAACC,YAAJ,CAAiB,YAAjB,EAA+BC,QAA/B,CAAwCT,IAAxC,CAA/E,CAAf;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACAP,MAAAA,YAAY,CAACO,MAAD,CAAZ;AACH,KATL,EAUKO,KAVL,CAUWC,KAAK,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KAZL;AAaH,GAdQ,EAcN,EAdM,CAAT;AAgBJH,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBZ,KAAlC,EAxBwB,CAyBxB;;AAGI,sBACI;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGPJ,IAAI,GACOE,SAAS,GAETA,SAAS,CAACiB,GAAV,CAAc,CAACP,GAAD,EAAMQ,GAAN,KAAc;AACxB,0BACI;AAAA,+BACA;AAAkB,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR,WAAzB;AAA0C,UAAA,GAAG,EAAG,sCAAqCT,GAAG,CAACU,EAAG;AAA5F,WAAUV,GAAG,CAACU,EAAd;AAAA;AAAA;AAAA;AAAA;AADA,uBADJ;AAKH,KAND,CAFS,gBAUL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXX,gBAaS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAjDD;;GAAMxB,I;;KAAAA,I;AAmDN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Bugs = (props) => {\r\n\r\n    const [bugs, setBugs] = useState([]);\r\n    const [available, setAvailable] = useState([]);\r\n\r\nconst {month} = props\r\nconst {hour} = props\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://acnhapi.com/v1a/bugs/`)\r\n            .then(response => {\r\n                // console.log(response.data);\r\n                // console.log(\"this is the month array\" + response.data[0].availability[\"month-array-northern\"])\r\n                // console.log(\"this is the time array\" + response.data[0].availability[\"time-array\"])\r\n                setBugs(response.data)\r\n                const result = bugs.filter(bug => bug.availability[\"month-array-northern\"].includes(month) && bug.availability[\"time-array\"].includes(hour))\r\n                console.log(result)\r\n                setAvailable(result)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }, []);\r\n\r\nconsole.log(\"this is the month\" + month)\r\n// console.log(\"this is the hour\" + hour )\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1>Bugs</h1>\r\n{bugs? \r\n            available ?\r\n        \r\n            available.map((bug, idx) => {\r\n                return (\r\n                    <>\r\n                    <img key={bug.id} style={{width: \"75px\"}} src={`https://acnhapi.com/v1/images/bugs/${bug.id}`} />\r\n                    </>\r\n                )\r\n            })\r\n                :\r\n                <p>Loading..</p>\r\n            \r\n            : <p>Loading</p>}\r\n\r\n                \r\n        </div>)\r\n};\r\n\r\nexport default Bugs;\r\n"]},"metadata":{},"sourceType":"module"}