{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nthab\\\\Desktop\\\\Coding Dojo\\\\MERN\\\\critterpedia\\\\src\\\\components\\\\Bugs.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Bugs = props => {\n  _s();\n\n  const [bugs, setBugs] = useState();\n  const [availability, setAvailability] = useState();\n  const {\n    month\n  } = props;\n  const {\n    hour\n  } = props;\n  useEffect(() => {\n    axios.get(`https://acnhapi.com/v1a/bugs/`).then(response => {\n      console.log(response.data);\n      console.log(response.data.availability);\n      setBugs(response.data);\n      setAvailability(response.data.availability);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  console.log(\"this is the month\" + month);\n  console.log(\"this is the hour\" + hour);\n  const result = bugs.filter(bug => bug.availability.monthArrayNorthern.includes(month) && bug.availability.timeArray.includes(hour));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bugs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), bugs ? bugs.map((bug, idx) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"75px\"\n          },\n          src: `https://acnhapi.com/v1/images/bugs/${bug.id}`\n        }, bug.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this)\n      }, void 0, false);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Bugs, \"KGTxwN+Qf/aoD6owrmAxYC2uWHg=\");\n\n_c = Bugs;\nexport default Bugs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bugs\");","map":{"version":3,"sources":["C:/Users/nthab/Desktop/Coding Dojo/MERN/critterpedia/src/components/Bugs.jsx"],"names":["React","axios","useState","useEffect","Bugs","props","bugs","setBugs","availability","setAvailability","month","hour","get","then","response","console","log","data","catch","error","result","filter","bug","monthArrayNorthern","includes","timeArray","map","idx","width","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,EAAhD;AAEJ,QAAM;AAACQ,IAAAA;AAAD,MAAUL,KAAhB;AACA,QAAM;AAACM,IAAAA;AAAD,MAASN,KAAf;AAEIF,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACW,GAAN,CAAW,+BAAX,EACKC,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcT,YAA1B;AACAD,MAAAA,OAAO,CAACO,QAAQ,CAACG,IAAV,CAAP;AACAR,MAAAA,eAAe,CAACK,QAAQ,CAACG,IAAT,CAAcT,YAAf,CAAf;AACH,KANL,EAOKU,KAPL,CAOWC,KAAK,IAAI;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,KATL;AAUH,GAXQ,EAWN,EAXM,CAAT;AAaJJ,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBN,KAAlC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBL,IAAjC;AACA,QAAMS,MAAM,GAAGd,IAAI,CAACe,MAAL,CAAYC,GAAG,IAAIA,GAAG,CAACd,YAAJ,CAAiBe,kBAAjB,CAAoCC,QAApC,CAA6Cd,KAA7C,KAAuDY,GAAG,CAACd,YAAJ,CAAiBiB,SAAjB,CAA2BD,QAA3B,CAAoCb,IAApC,CAA1E,CAAf;AAEI,sBACI;AAAA,4BAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAIKL,IAAI,GACDA,IAAI,CAACoB,GAAL,CAAS,CAACJ,GAAD,EAAMK,GAAN,KAAc;AACnB,0BACI;AAAA,+BACI;AAAkB,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAzB;AAAyD,UAAA,GAAG,EAAG,sCAAqCN,GAAG,CAACO,EAAG;AAA3G,WAAiDP,GAAG,CAACO,EAArD;AAAA;AAAA;AAAA;AAAA;AADJ,uBADJ;AAKH,KAND,CADC,gBASD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA1CD;;GAAMzB,I;;KAAAA,I;AA4CN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Bugs = (props) => {\r\n\r\n    const [bugs, setBugs] = useState();\r\n    const [availability, setAvailability] = useState();\r\n\r\nconst {month} = props\r\nconst {hour} = props\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://acnhapi.com/v1a/bugs/`)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                console.log(response.data.availability)\r\n                setBugs(response.data)\r\n                setAvailability(response.data.availability)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }, []);\r\n\r\nconsole.log(\"this is the month\" + month)\r\nconsole.log(\"this is the hour\" + hour )\r\nconst result = bugs.filter(bug => bug.availability.monthArrayNorthern.includes(month) && bug.availability.timeArray.includes(hour))\r\n\r\n    return (\r\n        <div>\r\n\r\n{/* {JSON.stringify(Object.keys(bugs.availability))} */}\r\n            <h1>Bugs</h1>\r\n            {bugs ?\r\n                bugs.map((bug, idx) => {\r\n                    return (\r\n                        <>\r\n                            <img key={bug.id} style={{ width: \"75px\" }} key={bug.id} src={`https://acnhapi.com/v1/images/bugs/${bug.id}`} />\r\n                        </>\r\n                    )\r\n                })\r\n                :\r\n                <p>Loading..</p>}\r\n                \r\n        </div>)\r\n};\r\n\r\nexport default Bugs;\r\n"]},"metadata":{},"sourceType":"module"}