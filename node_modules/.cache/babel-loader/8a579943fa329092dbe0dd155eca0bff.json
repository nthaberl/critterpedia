{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nthab\\\\Desktop\\\\Coding Dojo\\\\MERN\\\\critterpedia\\\\src\\\\components\\\\Bugs.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styles from \"../components/css/display.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Bugs = props => {\n  _s();\n\n  const [bugs, setBugs] = useState([]);\n  const [available, setAvailable] = useState([]); // const [isChanged, setIsChanged] = useState(false);\n\n  const {\n    month,\n    hour,\n    isChanged,\n    setIsChanged\n  } = props;\n  const history = useHistory(); // console.log(\"this is the month\" + month)\n  // console.log(\"hour \" + hour)\n\n  useEffect(() => {\n    axios.get(`https://acnhapi.com/v1a/bugs/`).then(response => {\n      // console.log(response.data);\n      // console.log(\"this is the month array\" + response.data[0].availability[\"month-array-northern\"])\n      // console.log(\"this is the time array\" + response.data[0].availability[\"time-array\"])\n      setBugs(response.data);\n      const result = bugs.filter(bug => bug.availability[\"month-array-northern\"].includes(parseInt(month)) && bug.availability[\"time-array\"].includes(parseInt(hour))); // console.log(result)\n\n      setAvailable(result);\n      setIsChanged(true); // console.log(available)\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [isChanged]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.resultsDisplay,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.resultsTitle,\n      children: \"Bugs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), available ? available.map((bug, idx) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: resultsImg,\n          src: `https://acnhapi.com/v1/images/bugs/${bug.id}`,\n          onClick: () => history.push(`/bugs/${bug.id}`)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }, this)\n      }, void 0, false);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Bugs, \"6uAfqXCSzyZJY6jGJDFcfL/iTmo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Bugs;\nexport default Bugs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bugs\");","map":{"version":3,"sources":["C:/Users/nthab/Desktop/Coding Dojo/MERN/critterpedia/src/components/Bugs.jsx"],"names":["React","axios","useState","useEffect","useHistory","styles","Bugs","props","bugs","setBugs","available","setAvailable","month","hour","isChanged","setIsChanged","history","get","then","response","data","result","filter","bug","availability","includes","parseInt","catch","error","console","log","resultsDisplay","resultsTitle","map","idx","resultsImg","id","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,sCAAnB;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C,CAHoB,CAIpB;;AAEA,QAAM;AAAEU,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,MAA2CR,KAAjD;AAEA,QAAMS,OAAO,GAAGZ,UAAU,EAA1B,CARoB,CAUpB;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACgB,GAAN,CAAW,+BAAX,EACKC,IADL,CACUC,QAAQ,IAAI;AACd;AACA;AACA;AACAV,MAAAA,OAAO,CAACU,QAAQ,CAACC,IAAV,CAAP;AACA,YAAMC,MAAM,GAAGb,IAAI,CAACc,MAAL,CAAYC,GAAG,IAAIA,GAAG,CAACC,YAAJ,CAAiB,sBAAjB,EAAyCC,QAAzC,CAAkDC,QAAQ,CAACd,KAAD,CAA1D,KAAsEW,GAAG,CAACC,YAAJ,CAAiB,YAAjB,EAA+BC,QAA/B,CAAwCC,QAAQ,CAACb,IAAD,CAAhD,CAAzF,CAAf,CALc,CAMd;;AACAF,MAAAA,YAAY,CAACU,MAAD,CAAZ;AACAN,MAAAA,YAAY,CAAC,IAAD,CAAZ,CARc,CASd;AACH,KAXL,EAYKY,KAZL,CAYWC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAdL;AAeH,GAhBQ,EAgBN,CAACd,SAAD,CAhBM,CAAT;AAsBA,sBACI;AAAK,IAAA,SAAS,EAAET,MAAM,CAAC0B,cAAvB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQtB,SAAS,GACLA,SAAS,CAACuB,GAAV,CAAc,CAACV,GAAD,EAAMW,GAAN,KAAc;AACxB,0BACI;AAAA,+BACI;AAAe,UAAA,SAAS,EAAEC,UAA1B;AAAsC,UAAA,GAAG,EAAG,sCAAqCZ,GAAG,CAACa,EAAG,EAAxF;AAA2F,UAAA,OAAO,EAAE,MAAMpB,OAAO,CAACqB,IAAR,CAAc,SAAQd,GAAG,CAACa,EAAG,EAA7B;AAA1G,WAAUF,GAAV;AAAA;AAAA;AAAA;AAAA;AADJ,uBADJ;AAKH,KAND,CADK,gBASL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CApDD;;GAAM5B,I;UAQcF,U;;;KARdE,I;AAsDN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styles from \"../components/css/display.module.css\"\r\n\r\nconst Bugs = (props) => {\r\n\r\n    const [bugs, setBugs] = useState([]);\r\n    const [available, setAvailable] = useState([]);\r\n    // const [isChanged, setIsChanged] = useState(false);\r\n\r\n    const { month, hour, isChanged, setIsChanged } = props\r\n\r\n    const history = useHistory();\r\n\r\n    // console.log(\"this is the month\" + month)\r\n    // console.log(\"hour \" + hour)\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://acnhapi.com/v1a/bugs/`)\r\n            .then(response => {\r\n                // console.log(response.data);\r\n                // console.log(\"this is the month array\" + response.data[0].availability[\"month-array-northern\"])\r\n                // console.log(\"this is the time array\" + response.data[0].availability[\"time-array\"])\r\n                setBugs(response.data)\r\n                const result = bugs.filter(bug => bug.availability[\"month-array-northern\"].includes(parseInt(month)) && bug.availability[\"time-array\"].includes(parseInt(hour)))\r\n                // console.log(result)\r\n                setAvailable(result)\r\n                setIsChanged(true)\r\n                // console.log(available)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }, [isChanged])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.resultsDisplay}>\r\n            <h1 className={styles.resultsTitle}>Bugs</h1>\r\n            {\r\n                available ?\r\n                    available.map((bug, idx) => {\r\n                        return (\r\n                            <>\r\n                                <img key={idx} className={resultsImg} src={`https://acnhapi.com/v1/images/bugs/${bug.id}`} onClick={() => history.push(`/bugs/${bug.id}`)}/>\r\n                            </>\r\n                        )\r\n                    })\r\n                    :\r\n                    <p>Loading..</p>}\r\n\r\n\r\n        </div>)\r\n};\r\n\r\nexport default Bugs\r\n"]},"metadata":{},"sourceType":"module"}