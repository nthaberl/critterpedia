{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nthab\\\\Desktop\\\\Coding Dojo\\\\MERN\\\\critterpedia\\\\src\\\\components\\\\Bugs.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Bugs = props => {\n  _s();\n\n  const [bugs, setBugs] = useState([]);\n  const {\n    month\n  } = props;\n  const {\n    hour\n  } = props;\n  useEffect(() => {\n    axios.get(`https://acnhapi.com/v1a/bugs/`).then(response => {\n      console.log(response.data);\n      console.log(response.data[0].availability[\"month-array-northern\"]);\n      setBugs(response.data); // setAvailability(response.data.availability)\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  console.log(\"this is the month\" + month);\n  console.log(\"this is the hour\" + hour); // const result = bugs.filter(bug => bug.availability.monthArrayNorthern.includes(month) && bug.availability.timeArray.includes(hour))\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [JSON.stringify(Object.entries(bugs)), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bugs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), bugs ? bugs.map((bug, idx) => {\n      var _bugs$availability;\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: JSON.stringify((_bugs$availability = bugs.availability) === null || _bugs$availability === void 0 ? void 0 : _bugs$availability.monthArrayNorthern)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"15%\"\n          },\n          src: `https://acnhapi.com/v1/images/bugs/${bug.id}`\n        }, bug.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    }) // bugs.filter(bug => (bug.availability.monthArrayNorthern).includes(month)).map((bug, idx) => {\n    //     return (\n    //         <>\n    //             <img key={bug.id} style={{ width: \"75px\" }} src={`https://acnhapi.com/v1/images/bugs/${bug.id}`} />\n    //         </>\n    //     )\n    // })\n    : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Bugs, \"zRWnMpXIGAgSYQwuKV5cUawekOk=\");\n\n_c = Bugs;\nexport default Bugs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bugs\");","map":{"version":3,"sources":["C:/Users/nthab/Desktop/Coding Dojo/MERN/critterpedia/src/components/Bugs.jsx"],"names":["React","axios","useState","useEffect","Bugs","props","bugs","setBugs","month","hour","get","then","response","console","log","data","availability","catch","error","JSON","stringify","Object","entries","map","bug","idx","monthArrayNorthern","width","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAGJ,QAAM;AAACM,IAAAA;AAAD,MAAUH,KAAhB;AACA,QAAM;AAACI,IAAAA;AAAD,MAASJ,KAAf;AAEIF,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACS,GAAN,CAAW,+BAAX,EACKC,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBC,YAAjB,CAA8B,sBAA9B,CAAZ;AACAT,MAAAA,OAAO,CAACK,QAAQ,CAACG,IAAV,CAAP,CAHc,CAId;AACH,KANL,EAOKE,KAPL,CAOWC,KAAK,IAAI;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,KATL;AAUH,GAXQ,EAWN,EAXM,CAAT;AAaJL,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBN,KAAlC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBL,IAAjC,EAtBwB,CAuBxB;;AAEI,sBACI;AAAA,eAEPU,IAAI,CAACC,SAAL,CAAeC,MAAM,CAACC,OAAP,CAAehB,IAAf,CAAf,CAFO,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAKKA,IAAI,GAELA,IAAI,CAACiB,GAAL,CAAS,CAACC,GAAD,EAAMC,GAAN,KAAc;AAAA;;AACnB,0BACI;AAAA,gCACA;AAAA,oBAAIN,IAAI,CAACC,SAAL,uBAAed,IAAI,CAACU,YAApB,uDAAe,mBAAmBU,kBAAlC;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAkB,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE;AAAR,WAAzB;AAAwC,UAAA,GAAG,EAAG,sCAAqCH,GAAG,CAACI,EAAG;AAA1F,WAAUJ,GAAG,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA,sBADJ;AAMH,KAPD,CAFK,CAWD;AACA;AACA;AACA;AACA;AACA;AACA;AAjBC,mBAmBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CArDD;;GAAMxB,I;;KAAAA,I;AAuDN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Bugs = (props) => {\r\n\r\n    const [bugs, setBugs] = useState([]);\r\n\r\n\r\nconst {month} = props\r\nconst {hour} = props\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://acnhapi.com/v1a/bugs/`)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                console.log(response.data[0].availability[\"month-array-northern\"])\r\n                setBugs(response.data)\r\n                // setAvailability(response.data.availability)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }, []);\r\n\r\nconsole.log(\"this is the month\" + month)\r\nconsole.log(\"this is the hour\" + hour )\r\n// const result = bugs.filter(bug => bug.availability.monthArrayNorthern.includes(month) && bug.availability.timeArray.includes(hour))\r\n\r\n    return (\r\n        <div>\r\n\r\n{JSON.stringify(Object.entries(bugs))}\r\n            <h1>Bugs</h1>\r\n\r\n            {bugs ?\r\n            \r\n            bugs.map((bug, idx) => {\r\n                return (\r\n                    <>\r\n                    <p>{JSON.stringify(bugs.availability?.monthArrayNorthern)}</p>\r\n                    <img key={bug.id} style={{width: \"15%\"}}src={`https://acnhapi.com/v1/images/bugs/${bug.id}`} />\r\n                    </>\r\n                )\r\n            })\r\n\r\n                // bugs.filter(bug => (bug.availability.monthArrayNorthern).includes(month)).map((bug, idx) => {\r\n                //     return (\r\n                //         <>\r\n                //             <img key={bug.id} style={{ width: \"75px\" }} src={`https://acnhapi.com/v1/images/bugs/${bug.id}`} />\r\n                //         </>\r\n                //     )\r\n                // })\r\n                :\r\n                <p>Loading..</p>}\r\n                \r\n        </div>)\r\n};\r\n\r\nexport default Bugs;\r\n"]},"metadata":{},"sourceType":"module"}