{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nthab\\\\Desktop\\\\Coding Dojo\\\\MERN\\\\critterpedia\\\\src\\\\components\\\\CritterDisplay.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CritterDisplay = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [available, setAvailable] = useState([]);\n  const {\n    critter\n  } = props;\n  const {\n    month\n  } = props;\n  const {\n    hour\n  } = props;\n\n  const Display = () => {\n    _s();\n\n    if (critter === \"bugs\") {\n      useEffect(() => {\n        axios.get(`https://acnhapi.com/v1a/bugs/`).then(response => {\n          console.log(response.data); // console.log(\"this is the month array\" + response.data[0].availability[\"month-array-northern\"])\n          // console.log(\"this is the time array\" + response.data[0].availability[\"time-array\"])\n\n          setBugs(response.data);\n          const result = bugs.filter(bug => bug.availability[\"month-array-northern\"].includes(month) && bug.availability[\"time-array\"].includes(hour));\n          console.log(result);\n          setAvailable(result);\n        }).catch(error => {\n          console.log(error);\n        });\n      }, []);\n      console.log(\"this is the month\" + month);\n      console.log(\"this is the hour\" + hour);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Bugs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), available ? available.map((bug, idx) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: \"75px\"\n              },\n              src: `https://acnhapi.com/v1/images/bugs/${bug.id}`\n            }, bug.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this)\n          }, void 0, false);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    }\n\n    ;\n  };\n\n  _s(Display, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return {\n    Display\n  };\n};\n\n_s2(CritterDisplay, \"t/vxTOfT6sOZLhABguWOlCPNrbA=\");\n\n_c = CritterDisplay;\nexport default CritterDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CritterDisplay\");","map":{"version":3,"sources":["C:/Users/nthab/Desktop/Coding Dojo/MERN/critterpedia/src/components/CritterDisplay.jsx"],"names":["React","axios","useState","useEffect","CritterDisplay","props","available","setAvailable","critter","month","hour","Display","get","then","response","console","log","data","setBugs","result","bugs","filter","bug","availability","includes","catch","error","map","idx","width","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AAE9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAEJ,QAAM;AAACM,IAAAA;AAAD,MAAYH,KAAlB;AACA,QAAM;AAACI,IAAAA;AAAD,MAAUJ,KAAhB;AACA,QAAM;AAACK,IAAAA;AAAD,MAASL,KAAf;;AAGA,QAAMM,OAAO,GAAG,MAAM;AAAA;;AACtB,QAAIH,OAAO,KAAK,MAAhB,EAAuB;AACnBL,MAAAA,SAAS,CAAC,MAAM;AACZF,QAAAA,KAAK,CAACW,GAAN,CAAW,+BAAX,EACKC,IADL,CACUC,QAAQ,IAAI;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EADc,CAEd;AACA;;AACAC,UAAAA,OAAO,CAACJ,QAAQ,CAACG,IAAV,CAAP;AACA,gBAAME,MAAM,GAAGC,IAAI,CAACC,MAAL,CAAYC,GAAG,IAAIA,GAAG,CAACC,YAAJ,CAAiB,sBAAjB,EAAyCC,QAAzC,CAAkDf,KAAlD,KAA4Da,GAAG,CAACC,YAAJ,CAAiB,YAAjB,EAA+BC,QAA/B,CAAwCd,IAAxC,CAA/E,CAAf;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACAZ,UAAAA,YAAY,CAACY,MAAD,CAAZ;AACH,SATL,EAUKM,KAVL,CAUWC,KAAK,IAAI;AACZX,UAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACH,SAZL;AAaH,OAdQ,EAcN,EAdM,CAAT;AAgBJX,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBP,KAAlC;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBN,IAAjC;AAGI,0BACI;AAAA,gCAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAKKJ,SAAS,GAEVA,SAAS,CAACqB,GAAV,CAAc,CAACL,GAAD,EAAMM,GAAN,KAAc;AACxB,8BACI;AAAA,mCACA;AAAkB,cAAA,KAAK,EAAE;AAACC,gBAAAA,KAAK,EAAE;AAAR,eAAzB;AAA0C,cAAA,GAAG,EAAG,sCAAqCP,GAAG,CAACQ,EAAG;AAA5F,eAAUR,GAAG,CAACQ,EAAd;AAAA;AAAA;AAAA;AAAA;AADA,2BADJ;AAKH,SAND,CAFU,gBAUN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAmBH;;AAAA;AACA,GA1CD;;AATkC,KAS5BnB,OAT4B;;AAsDlC,SACI;AAACA,IAAAA;AAAD,GADJ;AAGC,CAzDD;;IAAMP,c;;KAAAA,c;AA4DN,eAAeA,cAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst CritterDisplay = (props) => {\r\n\r\n    const [available, setAvailable] = useState([]);\r\n\r\nconst {critter} = props\r\nconst {month} = props\r\nconst {hour} = props\r\n\r\n\r\nconst Display = () => {\r\nif (critter === \"bugs\"){\r\n    useEffect(() => {\r\n        axios.get(`https://acnhapi.com/v1a/bugs/`)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                // console.log(\"this is the month array\" + response.data[0].availability[\"month-array-northern\"])\r\n                // console.log(\"this is the time array\" + response.data[0].availability[\"time-array\"])\r\n                setBugs(response.data)\r\n                const result = bugs.filter(bug => bug.availability[\"month-array-northern\"].includes(month) && bug.availability[\"time-array\"].includes(hour))\r\n                console.log(result)\r\n                setAvailable(result)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }, []);\r\n\r\nconsole.log(\"this is the month\" + month)\r\nconsole.log(\"this is the hour\" + hour )\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n{/* {JSON.stringify(Object.entries(bugs))} */}\r\n            <h1>Bugs</h1>\r\n\r\n            {available ?\r\n        \r\n            available.map((bug, idx) => {\r\n                return (\r\n                    <>\r\n                    <img key={bug.id} style={{width: \"75px\"}} src={`https://acnhapi.com/v1/images/bugs/${bug.id}`} />\r\n                    </>\r\n                )\r\n            })\r\n                :\r\n                <p>Loading..</p>}\r\n                \r\n        </div>)\r\n};\r\n}\r\n\r\n\r\nreturn (\r\n    {Display}\r\n)\r\n}\r\n \r\n\r\nexport default CritterDisplay;\r\n"]},"metadata":{},"sourceType":"module"}