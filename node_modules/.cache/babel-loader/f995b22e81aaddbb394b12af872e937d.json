{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nthab\\\\Desktop\\\\Coding Dojo\\\\MERN\\\\critterpedia\\\\src\\\\components\\\\Bugs.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Bugs = props => {\n  _s();\n\n  const [bugs, setBugs] = useState([]);\n  const [available, setAvailable] = useState([]);\n  const {\n    month\n  } = props;\n  const {\n    hour\n  } = props;\n  console.log(\"this is the month\" + month);\n  console.log(\"hour \" + hour);\n  useEffect(() => {\n    axios.get(`https://acnhapi.com/v1a/bugs/`).then(response => {\n      console.log(response.data); // console.log(\"this is the month array\" + response.data[0].availability[\"month-array-northern\"])\n      // console.log(\"this is the time array\" + response.data[0].availability[\"time-array\"])\n\n      setBugs(response.data).then(() => {\n        const result = bugs.filter(bug => bug.availability[\"month-array-northern\"].includes(parseInt(month)) && bug.availability[\"time-array\"].includes(parseInt(hour)));\n        console.log(result);\n        setAvailable(result);\n        console.log(available);\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bugs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), available ? available.map((bug, idx) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"75px\"\n          },\n          src: `https://acnhapi.com/v1/images/bugs/${bug.id}`\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }, this)\n      }, void 0, false);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Bugs, \"Q8bQidazq/m/G+N4oqhlSZw2f9M=\");\n\n_c = Bugs;\nexport default Bugs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bugs\");","map":{"version":3,"sources":["C:/Users/nthab/Desktop/Coding Dojo/MERN/critterpedia/src/components/Bugs.jsx"],"names":["React","axios","useState","useEffect","Bugs","props","bugs","setBugs","available","setAvailable","month","hour","console","log","get","then","response","data","result","filter","bug","availability","includes","parseInt","catch","error","map","idx","width","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAYL,KAAlB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAWN,KAAjB;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBH,KAAlC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUF,IAAtB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACa,GAAN,CAAW,+BAAX,EACKC,IADL,CACUC,QAAQ,IAAI;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,IAArB,EADc,CAEd;AACA;;AACAV,MAAAA,OAAO,CAACS,QAAQ,CAACC,IAAV,CAAP,CACCF,IADD,CACM,MAAM;AACZ,cAAMG,MAAM,GAAGZ,IAAI,CAACa,MAAL,CAAYC,GAAG,IAAIA,GAAG,CAACC,YAAJ,CAAiB,sBAAjB,EAAyCC,QAAzC,CAAkDC,QAAQ,CAACb,KAAD,CAA1D,KAAsEU,GAAG,CAACC,YAAJ,CAAiB,YAAjB,EAA+BC,QAA/B,CAAwCC,QAAQ,CAACZ,IAAD,CAAhD,CAAzF,CAAf;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACAT,QAAAA,YAAY,CAACS,MAAD,CAAZ;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACH,OANG,EAOHgB,KAPG,CAOGC,KAAK,IAAI;AACZb,QAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACH,OATG;AAUP,KAfD;AAgBH,GAjBQ,CAAT;AAuBA,sBACI;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIQjB,SAAS,GACLA,SAAS,CAACkB,GAAV,CAAc,CAACN,GAAD,EAAMO,GAAN,KAAc;AACxB,0BACI;AAAA,+BACI;AAAe,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAtB;AAAyC,UAAA,GAAG,EAAG,sCAAqCR,GAAG,CAACS,EAAG;AAA3F,WAAUF,GAAV;AAAA;AAAA;AAAA;AAAA;AADJ,uBADJ;AAKH,KAND,CADK,gBASL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CApDD;;GAAMvB,I;;KAAAA,I;AAsDN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Bugs = (props) => {\r\n\r\n    const [bugs, setBugs] = useState([]);\r\n    const [available, setAvailable] = useState([]);\r\n\r\n    const { month } = props\r\n    const { hour } = props\r\n\r\n    console.log(\"this is the month\" + month)\r\n    console.log(\"hour \" + hour)\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://acnhapi.com/v1a/bugs/`)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                // console.log(\"this is the month array\" + response.data[0].availability[\"month-array-northern\"])\r\n                // console.log(\"this is the time array\" + response.data[0].availability[\"time-array\"])\r\n                setBugs(response.data)\r\n                .then(() => {\r\n                const result = bugs.filter(bug => bug.availability[\"month-array-northern\"].includes(parseInt(month)) && bug.availability[\"time-array\"].includes(parseInt(hour)))\r\n                console.log(result)\r\n                setAvailable(result)\r\n                console.log(available)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n        })\r\n    })\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1>Bugs</h1>\r\n            {\r\n                available ?\r\n                    available.map((bug, idx) => {\r\n                        return (\r\n                            <>\r\n                                <img key={idx} style={{ width: \"75px\" }} src={`https://acnhapi.com/v1/images/bugs/${bug.id}`} />\r\n                            </>\r\n                        )\r\n                    })\r\n                    :\r\n                    <p>Loading..</p>}\r\n\r\n\r\n        </div>)\r\n};\r\n\r\nexport default Bugs\r\n"]},"metadata":{},"sourceType":"module"}