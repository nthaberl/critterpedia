{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nthab\\\\Desktop\\\\Coding Dojo\\\\MERN\\\\critterpedia\\\\src\\\\components\\\\Bugs.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Bugs = props => {\n  _s();\n\n  const [bugs, setBugs] = useState();\n  const {\n    month\n  } = props;\n  const {\n    hour\n  } = props;\n  useEffect(() => {\n    axios.get(`https://acnhapi.com/v1a/bugs/`).then(response => {\n      console.log(response.data);\n      console.log(response.data.availability);\n      setBugs(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  const findMonth = (month, bugs) => bugs.filter(item => Object.keys(month).every(key => item[key] === month[key]));\n\n  console.log(findMonth); // const result = bugs.filter(bug => bug.availability.monthArrayNorthern.includes(month) && bug.availability.timeArray.includes(hour))\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bugs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), bugs ? bugs.map((bug, idx) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"75px\"\n          },\n          src: `https://acnhapi.com/v1/images/bugs/${bug.id}`\n        }, bug.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this)\n      }, void 0, false);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Bugs, \"TjULjftOGezlkMJjAJBwmxoDNNY=\");\n\n_c = Bugs;\nexport default Bugs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bugs\");","map":{"version":3,"sources":["C:/Users/nthab/Desktop/Coding Dojo/MERN/critterpedia/src/components/Bugs.jsx"],"names":["React","axios","useState","useEffect","Bugs","props","bugs","setBugs","month","hour","get","then","response","console","log","data","availability","catch","error","findMonth","filter","item","Object","keys","every","key","map","bug","idx","width","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AAEJ,QAAM;AAACM,IAAAA;AAAD,MAAUH,KAAhB;AACA,QAAM;AAACI,IAAAA;AAAD,MAASJ,KAAf;AAEIF,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACS,GAAN,CAAW,+BAAX,EACKC,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,YAA1B;AACAT,MAAAA,OAAO,CAACK,QAAQ,CAACG,IAAV,CAAP;AACH,KALL,EAMKE,KANL,CAMWC,KAAK,IAAI;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACH,KARL;AASH,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMC,SAAS,GAAG,CAACX,KAAD,EAAQF,IAAR,KAAiBA,IAAI,CAACc,MAAL,CAAaC,IAAD,IAAUC,MAAM,CAACC,IAAP,CAAYf,KAAZ,EAAmBgB,KAAnB,CAA0BC,GAAD,IAASJ,IAAI,CAACI,GAAD,CAAJ,KAAcjB,KAAK,CAACiB,GAAD,CAArD,CAAtB,CAAnC;;AAGAZ,EAAAA,OAAO,CAACC,GAAR,CAAYK,SAAZ,EAtBoB,CAwBxB;;AAEI,sBACI;AAAA,4BAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAIKb,IAAI,GACDA,IAAI,CAACoB,GAAL,CAAS,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnB,0BACI;AAAA,+BACI;AAAkB,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAzB;AAAyD,UAAA,GAAG,EAAG,sCAAqCF,GAAG,CAACG,EAAG;AAA3G,WAAiDH,GAAG,CAACG,EAArD;AAAA;AAAA;AAAA;AAAA;AADJ,uBADJ;AAKH,KAND,CADC,gBASD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA3CD;;GAAM1B,I;;KAAAA,I;AA6CN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Bugs = (props) => {\r\n\r\n    const [bugs, setBugs] = useState();\r\n\r\nconst {month} = props\r\nconst {hour} = props\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://acnhapi.com/v1a/bugs/`)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                console.log(response.data.availability)\r\n                setBugs(response.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }, []);\r\n\r\n    const findMonth = (month, bugs) => bugs.filter((item) => Object.keys(month).every((key) => item[key] === month[key])\r\n    );\r\n\r\n    console.log(findMonth)\r\n\r\n// const result = bugs.filter(bug => bug.availability.monthArrayNorthern.includes(month) && bug.availability.timeArray.includes(hour))\r\n\r\n    return (\r\n        <div>\r\n\r\n{/* {JSON.stringify(Object.keys(bugs.availability))} */}\r\n            <h1>Bugs</h1>\r\n            {bugs ?\r\n                bugs.map((bug, idx) => {\r\n                    return (\r\n                        <>\r\n                            <img key={bug.id} style={{ width: \"75px\" }} key={bug.id} src={`https://acnhapi.com/v1/images/bugs/${bug.id}`} />\r\n                        </>\r\n                    )\r\n                })\r\n                :\r\n                <p>Loading..</p>}\r\n                \r\n        </div>)\r\n};\r\n\r\nexport default Bugs;\r\n"]},"metadata":{},"sourceType":"module"}