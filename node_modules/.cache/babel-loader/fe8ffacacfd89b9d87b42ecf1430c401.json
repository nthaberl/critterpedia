{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nthab\\\\Desktop\\\\Coding Dojo\\\\MERN\\\\critterpedia\\\\src\\\\components\\\\CritterDisplay.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CritterDisplay = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [available, setAvailable] = useState([]);\n  const [bugs, setBugs] = useState();\n  const [sea, setSea] = useState();\n  const [fish, setFish] = useState();\n  const {\n    critter\n  } = props;\n  const {\n    month\n  } = props;\n  const {\n    hour\n  } = props;\n\n  const Display = () => {\n    _s();\n\n    useEffect(() => {\n      if (critter === \"bugs\") {\n        axios.get(`https://acnhapi.com/v1a/bugs/`).then(response => {\n          console.log(response.data); // console.log(\"this is the month array\" + response.data[0].availability[\"month-array-northern\"])\n          // console.log(\"this is the time array\" + response.data[0].availability[\"time-array\"])\n\n          setBugs(response.data);\n          const result = bugs.filter(bug => bug.availability[\"month-array-northern\"].includes(month) && bug.availability[\"time-array\"].includes(hour));\n          console.log(result);\n          setAvailable(result);\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    }, []);\n    console.log(\"this is the month\" + month);\n    console.log(\"this is the hour\" + hour);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bugs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), available ? available.map((bug, idx) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: \"75px\"\n            },\n            src: `https://acnhapi.com/v1/images/bugs/${bug.id}`\n          }, bug.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this)\n        }, void 0, false);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(Display, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return {\n    Display\n  };\n};\n\n_s2(CritterDisplay, \"4Ug8fMDfNVy4uvBSHw0l6LFrhPk=\");\n\n_c = CritterDisplay;\nexport default CritterDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CritterDisplay\");","map":{"version":3,"sources":["C:/Users/nthab/Desktop/Coding Dojo/MERN/critterpedia/src/components/CritterDisplay.jsx"],"names":["React","axios","useState","useEffect","CritterDisplay","props","available","setAvailable","bugs","setBugs","sea","setSea","fish","setFish","critter","month","hour","Display","get","then","response","console","log","data","result","filter","bug","availability","includes","catch","error","map","idx","width","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AAE9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,EAA9B;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,EAAhC;AAEA,QAAM;AAAEY,IAAAA;AAAF,MAAcT,KAApB;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAYV,KAAlB;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAWX,KAAjB;;AAGA,QAAMY,OAAO,GAAG,MAAM;AAAA;;AAClBd,IAAAA,SAAS,CAAC,MAAM;AACZ,UAAIW,OAAO,KAAK,MAAhB,EAAwB;AACpBb,QAAAA,KAAK,CAACiB,GAAN,CAAW,+BAAX,EACKC,IADL,CACUC,QAAQ,IAAI;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,EADc,CAEd;AACA;;AACAd,UAAAA,OAAO,CAACW,QAAQ,CAACG,IAAV,CAAP;AACA,gBAAMC,MAAM,GAAGhB,IAAI,CAACiB,MAAL,CAAYC,GAAG,IAAIA,GAAG,CAACC,YAAJ,CAAiB,sBAAjB,EAAyCC,QAAzC,CAAkDb,KAAlD,KAA4DW,GAAG,CAACC,YAAJ,CAAiB,YAAjB,EAA+BC,QAA/B,CAAwCZ,IAAxC,CAA/E,CAAf;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACAjB,UAAAA,YAAY,CAACiB,MAAD,CAAZ;AACH,SATL,EAUKK,KAVL,CAUWC,KAAK,IAAI;AACZT,UAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH,SAZL;AAYO;AAEV,KAhBI,EAgBF,EAhBE,CAAT;AAkBAT,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBP,KAAlC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBN,IAAjC;AAGA,wBACI;AAAA,8BAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAKKV,SAAS,GAENA,SAAS,CAACyB,GAAV,CAAc,CAACL,GAAD,EAAMM,GAAN,KAAc;AACxB,4BACI;AAAA,iCACI;AAAkB,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAzB;AAA4C,YAAA,GAAG,EAAG,sCAAqCP,GAAG,CAACQ,EAAG;AAA9F,aAAUR,GAAG,CAACQ,EAAd;AAAA;AAAA;AAAA;AAAA;AADJ,yBADJ;AAKH,OAND,CAFM,gBAUN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH,GA1CD;;AAZ8B,KAYxBjB,OAZwB;;AAwD9B,SACI;AAAEA,IAAAA;AAAF,GADJ;AAGH,CA3DD;;IAAMb,c;;KAAAA,c;AAkEN,eAAeA,cAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst CritterDisplay = (props) => {\r\n\r\n    const [available, setAvailable] = useState([]);\r\n    const [bugs, setBugs] = useState();\r\n    const [sea, setSea] = useState();\r\n    const [fish, setFish] = useState();\r\n\r\n    const { critter } = props\r\n    const { month } = props\r\n    const { hour } = props\r\n\r\n\r\n    const Display = () => {\r\n        useEffect(() => {\r\n            if (critter === \"bugs\") {\r\n                axios.get(`https://acnhapi.com/v1a/bugs/`)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                        // console.log(\"this is the month array\" + response.data[0].availability[\"month-array-northern\"])\r\n                        // console.log(\"this is the time array\" + response.data[0].availability[\"time-array\"])\r\n                        setBugs(response.data)\r\n                        const result = bugs.filter(bug => bug.availability[\"month-array-northern\"].includes(month) && bug.availability[\"time-array\"].includes(hour))\r\n                        console.log(result)\r\n                        setAvailable(result)\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n                    })}\r\n\r\n            }, []);\r\n\r\n        console.log(\"this is the month\" + month)\r\n        console.log(\"this is the hour\" + hour)\r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n                {/* {JSON.stringify(Object.entries(bugs))} */}\r\n                <h1>Bugs</h1>\r\n\r\n                {available ?\r\n\r\n                    available.map((bug, idx) => {\r\n                        return (\r\n                            <>\r\n                                <img key={bug.id} style={{ width: \"75px\" }} src={`https://acnhapi.com/v1/images/bugs/${bug.id}`} />\r\n                            </>\r\n                        )\r\n                    })\r\n                    :\r\n                    <p>Loading..</p>}\r\n\r\n            </div>)\r\n    };\r\n\r\n    return (\r\n        { Display }\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default CritterDisplay;\r\n"]},"metadata":{},"sourceType":"module"}